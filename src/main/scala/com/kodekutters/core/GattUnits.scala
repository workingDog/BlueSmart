package com.kodekutters.core

import com.kodekutters.protocol.GattUnit

import scala.collection.immutable.HashMap

//  not to be used yet  ------ todo
/**
  * Units are established international standards for the measurement of physical quantities.
  *
  * ref: https://developer.bluetooth.org/gatt/units/Pages/default.aspx
 */
object GattUnits {

  val attributes = HashMap[String, GattUnit](
   "org.bluetooth.unit.unitless" -> new GattUnit("", ""),
   "org.bluetooth.unit.length.metre" -> new GattUnit("m", "metre"),
   "org.bluetooth.unit.mass.kilogram" -> new GattUnit("kg", "kilogram"),
   "org.bluetooth.unit.time.second" -> new GattUnit("s", "second"),
   "org.bluetooth.unit.electric_current.ampere" -> new GattUnit("A", "ampere"),
   "org.bluetooth.unit.thermodynamic_temperature.kelvin" -> new GattUnit("K", "kelvin"),
   "org.bluetooth.unit.amount_of_substance.mole" -> new GattUnit("mol", "mole"),
   "org.bluetooth.unit.luminous_intensity.candela" -> new GattUnit("cd", "cendela"),
   "org.bluetooth.unit.area.square_metres" -> new GattUnit("", "square metres"),
   "org.bluetooth.unit.volume.cubic_metres" -> new GattUnit("", "cubic metres"),
   "org.bluetooth.unit.velocity.metres_per_second" -> new GattUnit("", "metres per second"),
   "org.bluetooth.unit.acceleration.metres_per_second_squared" -> new GattUnit("", "metres per second squared"),
   "org.bluetooth.unit.wavenumber.reciprocal_metre" -> new GattUnit("", "reciprocal metre"),
   "org.bluetooth.unit.density.kilogram_per_cubic_metre" -> new GattUnit("", "kilogram per cubic metre"),
   "org.bluetooth.unit.surface_density.kilogram_per_square_metre" -> new GattUnit("", "kilogram per square metre"),
   "org.bluetooth.unit.specific_volume.cubic_metre_per_kilogram" -> new GattUnit("", "cubic metre per kilogram"),
   "org.bluetooth.unit.current_density.ampere_per_square_metre" -> new GattUnit("", "ampere per square metre"),
   "org.bluetooth.unit.magnetic_field_strength.ampere_per_metre" -> new GattUnit("", "ampere per metre"),
   "org.bluetooth.unit.amount_concentration.mole_per_cubic_metre" -> new GattUnit("", "mole per cubic metre"),
   "org.bluetooth.unit.mass_concentration.kilogram_per_cubic_metre" -> new GattUnit("", "kilogram per cubic metre"),
   "org.bluetooth.unit.luminance.candela_per_square_metre" -> new GattUnit("", "candela per square metre"),
   "org.bluetooth.unit.refractive_index" -> new GattUnit("", "refractive index"),
   "org.bluetooth.unit.relative_permeability" -> new GattUnit("", "relative permeability"),
   "org.bluetooth.unit.plane_angle.radian" -> new GattUnit("rad", "radian"),
   "org.bluetooth.unit.solid_angle.steradian" -> new GattUnit("sr", "steradian"),
   "org.bluetooth.unit.frequency.hertz" -> new GattUnit("Hz", "hertz"),
   "org.bluetooth.unit.force.newton" -> new GattUnit("N", "newton"),
   "org.bluetooth.unit.pressure.pascal" -> new GattUnit("Pa", "pascal"),
   "org.bluetooth.unit.energy.joule" -> new GattUnit("J", "joule"),
   "org.bluetooth.unit.power.watt" -> new GattUnit("W", "watt"),
   "org.bluetooth.unit.electric_charge.coulomb" -> new GattUnit("C", "coulomb"),
   "org.bluetooth.unit.electric_potential_difference.volt" -> new GattUnit("V", "volt"),
   "org.bluetooth.unit.capacitance.farad" -> new GattUnit("F", "farad"),
   "org.bluetooth.unit.electric_resistance.ohm" -> new GattUnit("", "ohm"),
   "org.bluetooth.unit.electric_conductance.siemens" -> new GattUnit("S", "siemens"),
   "org.bluetooth.unit.magnetic_flex.weber" -> new GattUnit("Wb", "weber"),
   "org.bluetooth.unit.magnetic_flex_density.tesla" -> new GattUnit("T", "tesla"),
   "org.bluetooth.unit.inductance.henry" -> new GattUnit("H", "henry"),
   "org.bluetooth.unit.thermodynamic_temperature.degree_celsius" -> new GattUnit("�C", "Celsius"),
   "org.bluetooth.unit.luminous_flux.lumen" -> new GattUnit("lm", "lumen"),
   "org.bluetooth.unit.illuminance.lux" -> new GattUnit("lx", "lux"),
   "org.bluetooth.unit.activity_referred_to_a_radionuclide.becquerel" -> new GattUnit("Bq", "becquerel"),
   "org.bluetooth.unit.absorbed_dose.gray" -> new GattUnit("Gy", "gray"),
   "org.bluetooth.unit.dose_equivalent.sievert" -> new GattUnit("Sv", "sievert"),
   "org.bluetooth.unit.catalytic_activity.katal" -> new GattUnit("kat", "katal"),
   "org.bluetooth.unit.dynamic_viscosity.pascal_second" -> new GattUnit("", "pascal second"),
   "org.bluetooth.unit.moment_of_force.newton_metre" -> new GattUnit("", "newton metre"),
   "org.bluetooth.unit.surface_tension.newton_per_metre" -> new GattUnit("", "newton per metre"),
   "org.bluetooth.unit.angular_velocity.radian_per_second" -> new GattUnit("", "radian per second"),
   "org.bluetooth.unit.angular_acceleration.radian_per_second_squared" -> new GattUnit("", "radian per second squared"),
   "org.bluetooth.unit.heat_flux_density.watt_per_square_metre" -> new GattUnit("", "watt per square metre"),
   "org.bluetooth.unit.heat_capacity.joule_per_kelvin" -> new GattUnit("", "joule per kelvin"),
   "org.bluetooth.unit.specific_heat_capacity.joule_per_kilogram_kelvin" -> new GattUnit("", "joule per kilogram kelvin"),
   "org.bluetooth.unit.specific_energy.joule_per_kilogram" -> new GattUnit("", "joule per kilogram"),
   "org.bluetooth.unit.thermal_conductivity.watt_per_metre_kelvin" -> new GattUnit("", "watt per metre kelvin"),
   "org.bluetooth.unit.energy_density.joule_per_cubic_metre" -> new GattUnit("", "joule per cubic metre"),
   "org.bluetooth.unit.electric_field_strength.volt_per_metre" -> new GattUnit("", "volt per metre"),
   "org.bluetooth.unit.electric_charge_density.coulomb_per_cubic_metre" -> new GattUnit("", "coulomb per cubic metre"),
   "org.bluetooth.unit.surface_charge_density.coulomb_per_square_metre" -> new GattUnit("", "coulomb per square metre"),
   "org.bluetooth.unit.electric_flux_density.coulomb_per_square_metre" -> new GattUnit("", "coulomb per square metre"),
   "org.bluetooth.unit.permittivity.farad_per_metre" -> new GattUnit("", "farad per metre"),
   "org.bluetooth.unit.permeability.henry_per_metre" -> new GattUnit("", "henry per metre"),
   "org.bluetooth.unit.molar_energy.joule_per_mole" -> new GattUnit("", "joule per mole"),
   "org.bluetooth.unit.molar_entropy.joule_per_mole_kelvin" -> new GattUnit("", "joule per mole kelvin"),
   "org.bluetooth.unit.exposure.coulomb_per_kilogram" -> new GattUnit("", "coulomb per kilogram"),
   "org.bluetooth.unit.absorbed_dose_rate.gray_per_second" -> new GattUnit("", "gray per second"),
   "org.bluetooth.unit.radiant_intensity.watt_per_steradian" -> new GattUnit("", "watt per steradian"),
   "org.bluetooth.unit.radiance.watt_per_square_metre_steradian" -> new GattUnit("", "watt per square metre steradian"),
   "org.bluetooth.unit.catalytic_activity_concentration.katal_per_cubic_metre" -> new GattUnit("", "katal per cubic metre"),
   "org.bluetooth.unit.time.minute" -> new GattUnit("", "minute"),
   "org.bluetooth.unit.time.hour" -> new GattUnit("", "hour"),
   "org.bluetooth.unit.time.day" -> new GattUnit("", "day"),
   "org.bluetooth.unit.plane_angle.degree" -> new GattUnit("", "degree"),
   "org.bluetooth.unit.plane_angle.minute" -> new GattUnit("", "minute"),
   "org.bluetooth.unit.plane_angle.second" -> new GattUnit("", "second"),
   "org.bluetooth.unit.area.hectare" -> new GattUnit("Ha", "hectare"),
   "org.bluetooth.unit.volume.litre" -> new GattUnit("L", "litre"),
   "org.bluetooth.unit.mass.tonne" -> new GattUnit("ton", "tonne"),
   "org.bluetooth.unit.pressure.bar" -> new GattUnit("", "bar"),
   "org.bluetooth.unit.pressure.millimetre_of_mercury" -> new GattUnit("", "millimetre of mercury"),
   "org.bluetooth.unit.length.ångström" -> new GattUnit("", "ångström"),
   "org.bluetooth.unit.length.nautical_mile" -> new GattUnit("", "nautical mile"),
   "org.bluetooth.unit.area.barn" -> new GattUnit("", "barn"),
   "org.bluetooth.unit.velocity.knot" -> new GattUnit("", "knot"),
   "org.bluetooth.unit.logarithmic_radio_quantity.neper" -> new GattUnit("", "neper"),
   "org.bluetooth.unit.logarithmic_radio_quantity.bel" -> new GattUnit("", "bel"),
   "org.bluetooth.unit.length.yard" -> new GattUnit("", "yard"),
   "org.bluetooth.unit.length.parsec" -> new GattUnit("", "parsec"),
   "org.bluetooth.unit.length.inch" -> new GattUnit("", "inch"),
   "org.bluetooth.unit.length.foot" -> new GattUnit("", "foot"),
   "org.bluetooth.unit.length.mile" -> new GattUnit("", "mile"),
   "org.bluetooth.unit.pressure.pound_force_per_square_inch" -> new GattUnit("", "pound-force per square inch"),
   "org.bluetooth.unit.velocity.kilometre_per_hour" -> new GattUnit("", "kilometre per hour"),
   "org.bluetooth.unit.velocity.mile_per_hour" -> new GattUnit("", "mile per hour"),
   "org.bluetooth.unit.angular_velocity.revolution_per_minute" -> new GattUnit("", "revolution per minute"),
   "org.bluetooth.unit.energy.gram_calorie" -> new GattUnit("", "gram calorie"),
   "org.bluetooth.unit.energy.kilogram_calorie" -> new GattUnit("", "kilogram calorie"),
   "org.bluetooth.unit.energy.kilowatt_hour" -> new GattUnit("", "kilowatt hour"),
   "org.bluetooth.unit.thermodynamic_temperature.degree_fahrenheit" -> new GattUnit("", "degree Fahrenheit"),
   "org.bluetooth.unit.percentage" -> new GattUnit("%", "percentage"),
   "org.bluetooth.unit.per_mille" -> new GattUnit("", "per mille"),
   "org.bluetooth.unit.period.beats_per_minute" -> new GattUnit("", "beats per minut"),
   "org.bluetooth.unit.electric_charge.ampere_hours" -> new GattUnit("", "ampere hours"),
   "org.bluetooth.unit.mass_density.milligram_per_decilitre" -> new GattUnit("", "milligram per decilitre"),
   "org.bluetooth.unit.mass_density.millimole_per_litre" -> new GattUnit("", "millimole per litre"),
   "org.bluetooth.unit.time.year" -> new GattUnit("", "year"),
   "org.bluetooth.unit.time.month" -> new GattUnit("", "month"),
   "org.bluetooth.unit.concentration.count_per_cubic_metre" -> new GattUnit("", "count per cubic metre"),
   "org.bluetooth.unit.irradiance.watt_per_square_metre" -> new GattUnit("", "watt per square metre")
  )

}